基于pygame的迷宫游戏

# 1.用prim算法生成迷宫

    [1]首先进入起点，已访问过的节点为一

    [2]根据目前的节点上下左右四个方向的通路情况random随机选择一个方向作为下一个访问的节点，已访问过的节点数加一

    [3]直到访问过的节点数量和地图上的所有节点相同时退出循环，此时所有节点已完成访问，地图生成完毕
# 2.用A*算法来完成寻路
A*算法是一种启发式搜索算法，用于解决图的单源最短路径问题。其主要思路如下：

    [1]创建两个列表：开放列表（open list）和关闭列表（closed list）

    [2]将起点加入到开放列表中，并给起点设置初始代价值（0）和启发式估计值（从起点到终点的估计代价）

    [3]循环执行以下步骤，直到找到目标节点或开放列表为空： 

        a. 从开放列表中选择一个节点，该节点是当前代价最小的节点（通过综合代价函数计算得出）
        b. 将该节点从开放列表中移出，并将其加入到关闭列表中
        c. 对该节点的所有邻居节点进行遍历：

            如果邻居节点已经在关闭列表中，则忽略
            如果邻居节点不在开放列表中，则将其加入到开放列表，并计算其代价值和启发式估计值
            如果邻居节点已经在开放列表中，并且通过当前节点到达邻居节点的路径代价更小，则更新邻居节点的代价值和启发式估计值

    [4]当找到目标节点时，可以通过追溯每个节点的父节点，从而得到从起点到目标节点的最短路径。
    
A*算法的关键是综合代价函数，它是由当前节点的实际代价（例如从起点到当前节点的路径代价）和启发式估计值（例如从当前节点到目标节点的估计代价）组成。综合代价函数通常是通过将实际代价和启发式估计值相加得出。
